import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import React from "react";
import { i18n } from "./WorldsPermissionRevokedNotification.i18n";
import { AccessRestrictedIcon, PermissionRevokedIcon } from "../../../Icon";
import { NotificationItem } from "../../NotificationItem";
import { NotificationItemDescription, NotificationItemTitle, } from "../../NotificationItem.styled";
import { replaceWithValues } from "../../utils";
const WorldsPermissionRevokedNotification = React.memo((props) => {
    const { notification, locale } = props;
    const permission = notification.metadata.permissions[0];
    const isAccessNotification = permission === "access";
    const Icon = isAccessNotification
        ? AccessRestrictedIcon
        : PermissionRevokedIcon;
    return (_jsxs(NotificationItem, { image: _jsx(Icon, {}), timestamp: notification.timestamp, isNew: !notification.read, locale: locale, children: [_jsx(NotificationItemTitle, { children: isAccessNotification ? i18n[locale].accessTitle : i18n[locale].title }), _jsx(NotificationItemDescription, { color: "inherit", underline: "none", children: replaceWithValues(i18n[locale][permission], {
                    world: _jsx("strong", { children: notification.metadata.world }),
                }) })] }));
});
export { WorldsPermissionRevokedNotification };
//# sourceMappingURL=WorldsPermissionRevokedNotification.js.map