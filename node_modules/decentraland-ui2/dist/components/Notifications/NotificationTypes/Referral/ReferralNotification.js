import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import React from "react";
import { NotificationType } from "@dcl/schemas";
import { ReferralInvitedUserAcceptedIcon, RewardIcon } from "../../../Icon";
import { NotificationItem } from "../../NotificationItem";
import { NotificationItemDescription, NotificationItemTitle, } from "../../NotificationItem.styled";
import { getBGColorByRarity } from "../../utils";
const ReferralNotification = React.memo((props) => {
    const { notification, locale, i18n } = props;
    const isNewTierReached = notification.type === NotificationType.REFERRAL_NEW_TIER_REACHED;
    return (_jsxs(NotificationItem, { image: isNewTierReached ? (notification.metadata.image) : (_jsx(ReferralInvitedUserAcceptedIcon, { width: 48, height: 48 })), imageBackgroundColor: isNewTierReached && notification.metadata.rarity
            ? getBGColorByRarity(notification.metadata.rarity)
            : "transparent", badgeIcon: isNewTierReached && _jsx(RewardIcon, {}), timestamp: notification.timestamp, isNew: !notification.read, locale: locale, children: [_jsx(NotificationItemTitle, { children: i18n[locale].title }), _jsx(NotificationItemDescription, { color: "inherit", underline: "none", children: i18n[locale].description })] }));
});
export { ReferralNotification };
//# sourceMappingURL=ReferralNotification.js.map