import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import React from "react";
import { Link } from "@mui/material";
import { StreamingIcon } from "../../../Icon";
import { IconBadge, IconBadgeIcon } from "../../../IconBadge";
import { NotificationItem } from "../../NotificationItem";
import { NotificationItemDescription, NotificationItemTitle, } from "../../NotificationItem.styled";
import { replaceWithValues } from "../../utils";
const StreamingNotification = React.memo((props) => {
    const { notification, locale, i18n } = props;
    return (_jsxs(NotificationItem, { image: _jsx(StreamingIcon, { width: 48, height: 48 }), timestamp: notification.timestamp, isNew: !notification.read, locale: locale, children: [_jsx(NotificationItemTitle, { children: i18n[locale].title }), _jsx(NotificationItemDescription, { color: "inherit", underline: "none", children: replaceWithValues(i18n[locale].description, {
                    place: notification.metadata.isWorld ? (_jsx(Link, { href: notification.metadata.url, target: "_blank", rel: "noreferrer", children: notification.metadata.worldName })) : (_jsx(IconBadge, { inline: true, icon: IconBadgeIcon.Places, text: notification.metadata.position, onClick: () => window.open(notification.metadata.url, "_blank") })),
                }) })] }));
});
export { StreamingNotification };
//# sourceMappingURL=StreamingNotification.js.map