import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import Download from "@mui/icons-material/Download";
import { Box } from "@mui/material";
import { DownloadButton } from "./DownloadButton";
import { config } from "../../config";
import { CDNSource, getCDNRelease } from "../../modules/cdnReleases";
import { DownloadButtonAppleIcon, DownloadButtonWindowsIcon, } from "./DownloadButton.styled";
const links = getCDNRelease(CDNSource.LAUNCHER);
const meta = {
    component: DownloadButton,
    title: "Decentraland UI/Download Button",
    tags: ["autodocs"],
    argTypes: {
        href: {
            description: "URL to download",
            control: "select",
            options: [links.Windows.amd64, links.macOS.arm64, links.macOS.amd64],
        },
        label: {
            description: "Button label text",
            defaultValue: "Download",
        },
        startIcon: {
            description: "Icon to show at start of button",
        },
        endIcon: {
            description: "Icon to show at end of button",
            control: "select",
            options: ["Windows", "macOS", "Download"],
        },
        onClick: {
            description: "Click handler",
        },
    },
    render: (args) => {
        const { endIcon, ...rest } = args;
        const icon = endIcon === "Windows" ? (_jsx(DownloadButtonWindowsIcon, {})) : endIcon === "macOS" ? (_jsx(DownloadButtonAppleIcon, {})) : null;
        return (_jsx(DownloadButton, { ...rest, endIcon: icon, startIcon: !icon && _jsx(Download, {}) }));
    },
};
const Basic = {
    name: "Basic",
    args: {
        href: config.get("DOWNLOAD_URL"),
        startIcon: _jsx(Download, {}),
    },
};
const WithOS = {
    name: "With OS Icons",
    render: () => (_jsxs(Box, { display: "flex", gap: 2, children: [_jsx(DownloadButton, { href: links.Windows.amd64, endIcon: _jsx(DownloadButtonWindowsIcon, {}), onClick: () => { } }), _jsx(DownloadButton, { href: links.macOS.arm64, endIcon: _jsx(DownloadButtonAppleIcon, {}), onClick: () => { } })] })),
};
// eslint-disable-next-line import/no-default-export
export default meta;
export { Basic, WithOS };
//# sourceMappingURL=DownloadButton.stories.js.map