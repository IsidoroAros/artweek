import { jsx as _jsx } from "react/jsx-runtime";
import { Network } from "@dcl/schemas";
import { ManaBalances } from "./ManaBalances";
const balance = {
    [Network.ETHEREUM]: 8888.88,
    [Network.MATIC]: 8888.88,
};
const meta = {
    component: ManaBalances,
    title: "Decentraland UI/Mana Balances",
    tags: ["autodocs"],
    argTypes: {
        manaBalances: {
            description: "Balance of MANA in different networks",
            control: {
                type: "object",
            },
            options: [balance],
        },
    },
    render: (args) => _jsx(ManaBalances, { manaBalances: balance, ...args }),
};
const Simple = {
    args: {},
};
const WithCredits = {
    args: {
        creditsBalance: {
            balance: 100,
            expiresAt: Date.now() + 1000 * 60 * 60 * 24 * 30,
        },
        i18n: {
            getCredits: "Earn Credits",
            creditsExpiringSoon: "Expiring soon",
            creditsExpiringIn: (value) => `Expiring in ${value} days`,
            creditsValue: "(1 Credit = 1 MANA in value)",
        },
    },
};
const WithCreditsExpiringSoon = {
    args: {
        creditsBalance: {
            balance: 100,
            expiresAt: Date.now() + 1000 * 60 * 60 * 24 * 3,
        },
        i18n: {
            getCredits: "Earn Credits",
            creditsExpiringSoon: "Expiring soon",
            creditsExpiringIn: (value) => `Expiring in ${value} days`,
            creditsValue: "(1 Credit = 1 MANA in value)",
        },
    },
};
const WithNoCredits = {
    args: {
        creditsBalance: {
            balance: 0,
            expiresAt: Date.now() + 1000 * 60 * 60 * 24 * 30,
        },
        i18n: {
            getCredits: "Earn Credits",
            creditsExpiringSoon: "Expiring soon",
            creditsExpiringIn: (value) => `Expiring in ${value} days`,
            creditsValue: "(1 Credit = 1 MANA in value)",
        },
    },
};
const WithCreditsButNotMANA = {
    args: {
        manaBalances: undefined,
        creditsBalance: {
            balance: 100,
            expiresAt: Date.now() + 1000 * 60 * 60 * 24 * 30,
        },
        i18n: {
            getCredits: "Earn Credits",
            creditsExpiringSoon: "Expiring soon",
            creditsExpiringIn: (value) => `Expiring in ${value} days`,
            creditsValue: "(1 Credit = 1 MANA in value)",
        },
    },
};
export { Simple, WithCredits, WithNoCredits, WithCreditsExpiringSoon, WithCreditsButNotMANA, };
// eslint-disable-next-line import/no-default-export
export default meta;
//# sourceMappingURL=ManaBalances.stories.js.map