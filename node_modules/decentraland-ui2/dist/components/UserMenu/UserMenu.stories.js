import { jsx as _jsx } from "react/jsx-runtime";
import { useState } from "react";
import { Network } from "@dcl/schemas";
import { Box } from "@mui/material";
import { UserMenu } from "./UserMenu";
import { i18n } from "./UserMenu.i18n";
import { avatar } from "../../data/avatar";
import { itemSoldNotificationPropsData } from "../../data/notifications";
import { NotificationActiveTab } from "../Notifications";
const meta = {
    component: UserMenu,
    title: "Decentraland UI/UserMenu",
    argTypes: {},
    args: {
        i18n: i18n,
    },
    render: (args) => {
        return _jsx(UserMenu, { ...args });
    },
};
const SignedOut = {
    name: "Signed Out",
};
const SignedIn = {
    name: "Signed In",
    args: {
        avatar: avatar,
        isSignedIn: true,
    },
};
const SigningIn = {
    name: "Signing In",
    args: {
        avatar: avatar,
        isSigningIn: true,
    },
};
const Disconnecting = {
    name: "Disconnecting",
    args: {
        isDisconnecting: true,
    },
};
const Guest = {
    name: "Guest",
    args: {
        avatar: { ...avatar, hasClaimedName: false },
        isSignedIn: true,
    },
};
const Complete = {
    name: "Complete",
    args: {
        avatar: avatar,
        manaBalances: { [Network.ETHEREUM]: 1000, [Network.MATIC]: 2500 },
        creditsBalance: {
            balance: 100,
            expiresAt: Date.now() + 1000 * 60 * 60 * 24 * 30,
        },
        hasActivity: true,
        isSignedIn: true,
    },
    render: (args) => {
        const [openNotification, setOpenNotification] = useState(false);
        const [tab, setTab] = useState(NotificationActiveTab.NEWEST);
        return (_jsx(Box, { sx: {
                width: "500px",
                height: "90vh",
            }, children: _jsx(UserMenu, { ...args, notifications: {
                    isOnboarding: false,
                    isOpen: openNotification,
                    isLoading: false,
                    items: [itemSoldNotificationPropsData],
                    locale: "en",
                    activeTab: tab,
                    onBegin: console.log,
                    onChangeTab: (_e, tab) => setTab(tab),
                    onClick: () => setOpenNotification(true),
                    onClose: () => setOpenNotification(false),
                } }) }));
    },
};
// eslint-disable-next-line import/no-default-export
export default meta;
export { SignedOut, SignedIn, SigningIn, Disconnecting, Guest, Complete };
//# sourceMappingURL=UserMenu.stories.js.map