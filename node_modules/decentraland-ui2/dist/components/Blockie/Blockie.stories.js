import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from "react/jsx-runtime";
import { Box } from "@mui/material";
import { Blockie } from "./Blockie";
import { Address } from "../Address";
import { Mana } from "../Mana";
const address = "0x0F5D2fB29fb7d3CFeE444a200298f468908cC942";
const meta = {
    component: Blockie,
    title: "Decentraland UI/Blockie",
    tags: ["autodocs"],
    argTypes: {
        seed: {
            description: "Seed used to generate icon data",
        },
        color: {
            description: "Icon color",
            defaultValue: "#e449c2",
        },
        spotcolor: {
            description: "Color that may appear in each of the pixels with a 13% chance",
            defaultValue: "#e449c2",
        },
        bgcolor: {
            description: "Background color",
            defaultValue: "#3149de",
        },
        size: {
            description: "width/height of the icon in blocks",
            defaultValue: 6,
        },
        scale: {
            description: "width/height of each block in pixels",
            defaultValue: 6,
        },
    },
    render: (args) => _jsx(Blockie, { ...args }),
};
const Single = {
    name: "Single",
    args: {
        seed: address,
    },
};
const Scales = {
    name: "Scales",
    render: () => (_jsxs(_Fragment, { children: [_jsx(Blockie, { seed: address, scale: 2 }), _jsx(Blockie, { seed: address, scale: 3 }), _jsx(Blockie, { seed: address, scale: 5 }), _jsx(Blockie, { seed: address, scale: 8 }), _jsx(Blockie, { seed: address, scale: 13 }), _jsx(Blockie, { seed: address, scale: 21 })] })),
};
const InAParagraph = {
    name: "In a paragraph",
    render: () => (_jsxs(Box, { children: ["You have transferred ", _jsx(Mana, { inline: true, children: "1,000" }), " to", " ", _jsx(Blockie, { scale: 3, seed: address, children: _jsx(Address, { value: address, strong: true }) }), "."] })),
};
// eslint-disable-next-line import/no-default-export
export default meta;
export { Single, Scales, InAParagraph };
//# sourceMappingURL=Blockie.stories.js.map