import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from "react/jsx-runtime";
import { Network } from "@dcl/schemas";
import { Typography } from "@mui/material";
import { Mana } from "./Mana";
const meta = {
    component: Mana,
    title: "Decentraland UI/Mana",
    tags: ["autodocs"],
    argTypes: {
        size: {
            description: "Size of the mana icon",
        },
        inline: {
            description: "Mana component should be displayed inline",
        },
        network: {
            description: "Network to display the mana icon",
            defaultValue: Network.ETHEREUM,
        },
        primary: {
            description: "Switch the color of the icon to primary",
        },
        showTooltip: {
            description: "Show tooltip on hover",
        },
    },
    render: (args) => _jsx(Mana, { ...args }),
};
const Symbol = {
    args: {
        primary: true,
    },
};
const SymbolMana = {
    name: "Symbol + MANA",
    args: { children: "MANA" },
};
const SymbolVoted = {
    name: "Total voted",
    args: { children: "MANA" },
    render: (args) => (_jsxs(_Fragment, { children: [_jsx(Typography, { children: "Total voted" }), _jsx(Mana, { ...args, children: "1,235,345" })] })),
};
const SymbolSizes = {
    name: "Sizes",
    args: { children: "1,000" },
    render: (args) => (_jsxs(_Fragment, { children: [_jsx(Mana, { ...args, size: "large" }), _jsx(Mana, { ...args, size: "medium" }), _jsx(Mana, { ...args, size: "small" })] })),
};
const SymbolInline = {
    name: "Inline",
    args: { children: "1,000", inline: true },
    render: (args) => (_jsxs("p", { children: ["You've voted with ", _jsx(Mana, { ...args }), "."] })),
};
const SymbolMatic = {
    name: "Matic",
    args: {
        children: "1,000",
        inline: true,
        network: Network.MATIC,
    },
    render: (args) => (_jsxs("p", { children: ["You deposited ", _jsx(Mana, { ...args }), " into Matic Network."] })),
};
const SymbolMaticPrimary = {
    name: "Matic primary",
    args: {
        children: "1,000",
        inline: true,
        network: Network.MATIC,
        primary: true,
    },
    render: (args) => (_jsxs("p", { children: ["You deposited ", _jsx(Mana, { ...args }), " into Matic Network."] })),
};
const SymbolMaticSizes = {
    name: "Matic sizes",
    args: {
        children: "1,000",
        network: Network.MATIC,
    },
    render: (args) => (_jsxs(_Fragment, { children: [_jsx(Mana, { ...args, size: "large" }), _jsx(Mana, { ...args, size: "medium" }), _jsx(Mana, { ...args, size: "small" })] })),
};
const ManaTooltip = {
    name: "Mana + Tooltip",
    args: {
        children: "1,000",
        network: Network.MATIC,
        showTooltip: true,
        size: "small",
    },
};
// eslint-disable-next-line import/no-default-export
export default meta;
export { Symbol, SymbolMana, SymbolVoted, SymbolSizes, SymbolInline, SymbolMatic, SymbolMaticPrimary, SymbolMaticSizes, ManaTooltip, };
//# sourceMappingURL=Mana.stories.js.map