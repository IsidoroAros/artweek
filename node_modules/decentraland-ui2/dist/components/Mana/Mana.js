import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import React from "react";
import { Network } from "@dcl/schemas";
import { Tooltip } from "@mui/material";
import { getNetworkMANADescription } from "../../lib/network";
import { ManaEthIcon, ManaMaticIcon } from "../Icon";
import { ImageContainer, ManaButtonContainer } from "./Mana.styled";
const ManaButton = React.memo((props) => {
    const { children, size, network, primary, color, ...rest } = props;
    return (_jsxs(ManaButtonContainer, { fontSize: size, ...rest, children: [_jsx(ImageContainer, { primary: primary, color: color, children: !network || network !== Network.MATIC ? (_jsx(ManaEthIcon, { fontSize: size || "inherit" })) : (_jsx(ManaMaticIcon, { fontSize: size || "inherit" })) }), children] }));
});
const Mana = React.memo((props) => {
    const { showTooltip, ...manaButtonProps } = props;
    return showTooltip ? (_jsx(Tooltip, { placement: "top", title: getNetworkMANADescription(manaButtonProps.network || Network.ETHEREUM), children: _jsx(ManaButton, { ...manaButtonProps }) })) : (_jsx(ManaButton, { ...manaButtonProps }));
});
export { Mana };
//# sourceMappingURL=Mana.js.map