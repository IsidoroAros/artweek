import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useCallback } from "react";
import { SubMenuItemContainer, SubMenuItemDescription, SubMenuItemExternal, SubMenuItemTitle, SubMenuLink, } from "./SubMenuItem.styled";
export const SubMenuItem = (props) => {
    const { title, description, href, isExternal, eventTrackingName, onClickMenuOption, } = props;
    const handleClick = useCallback((event) => {
        event.preventDefault();
        onClickMenuOption &&
            onClickMenuOption(event, { eventTrackingName, url: href, isExternal });
        setTimeout(() => {
            window.open(href, isExternal ? "_blank" : "_self", "noopener");
        }, onClickMenuOption ? 300 : 0);
    }, [onClickMenuOption, eventTrackingName, href, isExternal]);
    return (_jsx(SubMenuItemContainer, { isExternal: isExternal, "aria-label": "submenu item", children: _jsxs(SubMenuLink, { href: href, onClick: handleClick, isExternal: isExternal, "aria-label": `${title} - ${isExternal ? "opens in new tab" : "opens in same tab"}`, children: [_jsx(SubMenuItemTitle, { "aria-label": title, children: title }), _jsx(SubMenuItemDescription, { "aria-label": description, children: description }), isExternal && _jsx(SubMenuItemExternal, { "aria-label": "external link icon" })] }) }));
};
//# sourceMappingURL=SubMenuItem.js.map