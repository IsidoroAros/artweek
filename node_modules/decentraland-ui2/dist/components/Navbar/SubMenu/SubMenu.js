import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import ArrowBackIosNewRoundedIcon from "@mui/icons-material/ArrowBackIosNewRounded";
import { SubMenuColumn } from "../SubMenuColumn/SubMenuColumn";
import { SubMenuItem } from "../SubMenuItem/SubMenuItem";
import { BackButton, MenuItemContainer, SubMenuContainer, SubMenuWrapper, } from "./SubMenu.styled";
export const SubMenu = (props) => {
    const { selectedMenu, onToggleShowSubMenu, onClickMenuOption, isMobile, submenus, } = props;
    return (_jsx(SubMenuContainer, { children: Object.keys(submenus).map((key) => {
            const section = key;
            const submenu = submenus[section];
            return (_jsx(MenuItemContainer, { onMouseEnter: (e) => !isMobile && onToggleShowSubMenu(e, true, section), onMouseLeave: (e) => !isMobile && onToggleShowSubMenu(e, false, section), active: selectedMenu === section, section: section, isMobile: isMobile, "aria-label": `${section.toLowerCase()} submenu section`, children: _jsxs(SubMenuWrapper, { children: [isMobile && (_jsx(BackButton, { variant: "text", color: "inherit", onClick: (e) => onToggleShowSubMenu(e, false, section), startIcon: _jsx(ArrowBackIosNewRoundedIcon, {}), "aria-label": "back to main menu", children: "Back" })), _jsx(SubMenuColumn, { title: submenu.column1Title, children: submenu.column1.map((item, index) => (_jsx(SubMenuItem, { isExternal: item.isExternal, title: item.title, description: item.description, href: item.url, eventTrackingName: item.eventTrackingName, onClickMenuOption: onClickMenuOption }, index))) }), _jsx(SubMenuColumn, { title: submenu.column2Title, children: submenu.column2.map((item, index) => (_jsx(SubMenuItem, { isExternal: item.isExternal, title: item.title, description: item.description, href: item.url, eventTrackingName: item.eventTrackingName, onClickMenuOption: onClickMenuOption }, index))) }), !!submenu.column3 && (_jsx(SubMenuColumn, { title: submenu.column3Title, children: submenu.column3.map((item, index) => (_jsx(SubMenuItem, { isExternal: item.isExternal, title: item.title, description: item.description, href: item.url, eventTrackingName: item.eventTrackingName, onClickMenuOption: onClickMenuOption }, index))) }))] }) }, key));
        }) }));
};
//# sourceMappingURL=SubMenu.js.map