import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import React from "react";
import ArrowBackIosNewRoundedIcon from "@mui/icons-material/ArrowBackIosNewRounded";
import CancelRoundedIcon from "@mui/icons-material/CancelRounded";
import { IconButton, Typography } from "@mui/material";
import { Modal as BaseModal, ModalActionsContainer, ModalContainer, ModalContentContainer, ModalTitleContainer, } from "./Modal.styled";
const ModalContent = React.memo((props) => {
    const { children, header, actions, title, subtitle, size, onClose, onBack, } = props;
    return (_jsxs(ModalContainer, { elevation: 24, size: size, children: [header, (title || onClose || onBack) && (_jsxs(ModalTitleContainer, { children: [onBack && (_jsx(IconButton, { "aria-label": "back", size: "large", onClick: onBack, children: _jsx(ArrowBackIosNewRoundedIcon, {}) })), title && _jsx(Typography, { variant: "h5", children: title }), onClose && (_jsx(IconButton, { "aria-label": "close", size: "large", onClick: onClose, children: _jsx(CancelRoundedIcon, {}) }))] })), subtitle && _jsx(Typography, { variant: "subtitle1", children: subtitle }), _jsx(ModalContentContainer, { children: children }), actions && _jsx(ModalActionsContainer, { children: actions })] }));
});
const Modal = React.memo((props) => {
    const { open, onClose, children, className, ...modalContentProps } = props;
    return (_jsx(BaseModal, { open: open, onClose: onClose, className: className, children: _jsx(ModalContent, { ...modalContentProps, onClose: onClose, children: children }) }));
});
export { Modal, ModalContent };
//# sourceMappingURL=Modal.js.map