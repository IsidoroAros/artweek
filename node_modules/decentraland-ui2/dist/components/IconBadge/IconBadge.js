import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from "react/jsx-runtime";
import React from "react";
import RepeatOneRoundedIcon from "@mui/icons-material/RepeatOneRounded";
import RepeatRoundedIcon from "@mui/icons-material/RepeatRounded";
import { BaseFemaleIcon, BaseMaleIcon, BodyShapeIcon, EarringIcon, EyebrowsIcon, EyesIcon, EyewearIcon, FacialHairIcon, FeetIcon, HairIcon, HandsWearIcon, HatIcon, HelmetIcon, LowerBodyIcon, MaskIcon, MouthIcon, PlacesIcon, PropsIcon, SkinIcon, SmartWearableIcon, SoundIcon, SparklesIcon, TiaraIcon, TopHeadIcon, UnisexIcon, UpperBodyIcon, UtilityIcon, } from "../Icon";
import { IconBadgeIcon } from "./IconBadge.types";
import { IconBadgeButtonContainer, ImageContainer, TextContainer, } from "./IconBadge.styled";
const getIcon = (icon) => {
    const commonProps = {
        fontSize: "small",
        color: "inherit",
    };
    switch (icon) {
        case IconBadgeIcon.BaseFemale:
            return _jsx(BaseFemaleIcon, { ...commonProps });
        case IconBadgeIcon.BaseMale:
            return _jsx(BaseMaleIcon, { ...commonProps });
        case IconBadgeIcon.Unisex:
            return _jsx(UnisexIcon, { ...commonProps });
        case IconBadgeIcon.BodyShape:
            return _jsx(BodyShapeIcon, { ...commonProps });
        case IconBadgeIcon.Earring:
            return _jsx(EarringIcon, { ...commonProps });
        case IconBadgeIcon.Eyebrows:
            return _jsx(EyebrowsIcon, { ...commonProps });
        case IconBadgeIcon.Eyes:
            return _jsx(EyesIcon, { ...commonProps });
        case IconBadgeIcon.Eyewear:
            return _jsx(EyewearIcon, { ...commonProps });
        case IconBadgeIcon.FacialHair:
            return _jsx(FacialHairIcon, { ...commonProps });
        case IconBadgeIcon.Feet:
            return _jsx(FeetIcon, { ...commonProps });
        case IconBadgeIcon.Hair:
            return _jsx(HairIcon, { ...commonProps });
        case IconBadgeIcon.Hat:
            return _jsx(HatIcon, { ...commonProps });
        case IconBadgeIcon.Helmet:
            return _jsx(HelmetIcon, { ...commonProps });
        case IconBadgeIcon.LowerBody:
            return _jsx(LowerBodyIcon, { ...commonProps });
        case IconBadgeIcon.Mask:
            return _jsx(MaskIcon, { ...commonProps });
        case IconBadgeIcon.Mouth:
            return _jsx(MouthIcon, { ...commonProps });
        case IconBadgeIcon.Tiara:
            return _jsx(TiaraIcon, { ...commonProps });
        case IconBadgeIcon.TopHead:
            return _jsx(TopHeadIcon, { ...commonProps });
        case IconBadgeIcon.UpperBody:
            return _jsx(UpperBodyIcon, { ...commonProps });
        case IconBadgeIcon.Skin:
            return _jsx(SkinIcon, { ...commonProps });
        case IconBadgeIcon.HandsWear:
            return _jsx(HandsWearIcon, { ...commonProps });
        case IconBadgeIcon.PlayOnce:
            return _jsx(RepeatOneRoundedIcon, { ...commonProps });
        case IconBadgeIcon.PlayLoop:
            return _jsx(RepeatRoundedIcon, { ...commonProps });
        case IconBadgeIcon.SmartWearable:
            return _jsx(SmartWearableIcon, { ...commonProps });
        case IconBadgeIcon.Sound:
            return _jsx(SoundIcon, { ...commonProps });
        case IconBadgeIcon.Props:
            return _jsx(PropsIcon, { ...commonProps });
        case IconBadgeIcon.Sparkles:
            return _jsx(SparklesIcon, { ...commonProps });
        case IconBadgeIcon.Places:
            return _jsx(PlacesIcon, { ...commonProps });
        case IconBadgeIcon.Utility:
            return _jsx(UtilityIcon, { ...commonProps });
        default:
            return _jsx(_Fragment, {});
    }
};
const IconBadge = React.memo((props) => {
    const { icon, text, children, ...rest } = props;
    return (_jsxs(IconBadgeButtonContainer, { ...rest, children: [icon && (_jsx(ImageContainer, { children: children ? { children } : getIcon(icon) })), text ? _jsx(TextContainer, { children: text }) : null] }));
});
export { IconBadge };
//# sourceMappingURL=IconBadge.js.map