"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useAsyncTask = void 0;
/* eslint-disable @typescript-eslint/no-explicit-any */
const react_1 = require("react");
const sentry_1 = require("../utils/development/sentry");
/**
 * Execute an async function and return a loading state and a function to call the async function
 * @param callback - The async function to execute
 * @param deps - The dependencies of the async function
 * @returns A tuple containing the loading state and a function to call the async function
 */
const useAsyncTask = (callback, deps) => {
    const [{ loading, args }, setLoading] = (0, react_1.useState)({
        loading: false,
        args: null,
    });
    (0, react_1.useEffect)(() => {
        if (!loading) {
            return;
        }
        if (args === null) {
            return;
        }
        let cancelled = false;
        Promise.resolve()
            .then(() => callback(...args))
            .then(() => {
            if (cancelled) {
                return;
            }
            setLoading({ loading: false, args: null });
        })
            .catch((err) => {
            console.error(err);
            (0, sentry_1.sentry)((sentry) => sentry.captureException(err));
            if (cancelled) {
                return;
            }
            setLoading({ loading: false, args: null });
        });
        return () => {
            cancelled = true;
        };
    }, [loading]);
    const callTask = (0, react_1.useCallback)((...args) => {
        setLoading({ loading: true, args });
    }, [loading, args, ...deps]);
    return [loading, callTask];
};
exports.useAsyncTask = useAsyncTask;
//# sourceMappingURL=useAsyncTask.js.map