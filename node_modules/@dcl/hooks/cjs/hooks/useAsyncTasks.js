"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useAsyncTasks = void 0;
/* eslint-disable @typescript-eslint/no-explicit-any */
const react_1 = require("react");
const sentry_1 = require("../utils/development/sentry");
/**
 * Use async tasks to execute async functions and return a list of task ids and a function to add a task
 * @param callback - The async function to execute
 * @param deps - The dependencies of the async function
 * @returns A tuple containing the list of task ids and a function to add a task
 */
const useAsyncTasks = (callback, deps) => {
    const [tasks, setTasks] = (0, react_1.useState)([]);
    const tasksIds = (0, react_1.useMemo)(() => tasks.map(([id]) => id), [tasks]);
    const addTask = (0, react_1.useCallback)((id, ...extra) => {
        if (tasks.find(([currentId]) => currentId === id)) {
            return;
        }
        const task = Promise.resolve()
            .then(() => callback(id, ...extra))
            .then(() => {
            setTasks((current) => current.filter(([currentId]) => currentId !== id));
        })
            .catch((err) => {
            console.error(err);
            (0, sentry_1.sentry)((sentry) => sentry.captureException(err));
            setTasks((current) => current.filter(([currentId]) => currentId !== id));
        });
        setTasks((current) => [...current, [id, task]]);
    }, [tasks, ...deps]);
    return [tasksIds, addTask];
};
exports.useAsyncTasks = useAsyncTasks;
//# sourceMappingURL=useAsyncTasks.js.map