import { JSONSchema, ValidateFunction } from '../../validation';
import { BaseEvent, Events } from './base';
type StreamingMetadata = {
    title: string;
    description: string;
    position: string;
    worldName: string | null;
    isWorld: boolean;
    url: string;
    address: string;
    image: string;
};
export type StreamingKeyResetEvent = BaseEvent & {
    type: Events.Type.STREAMING;
    subType: Events.SubType.Streaming.STREAMING_KEY_RESET;
    metadata: StreamingMetadata;
};
export type StreamingKeyRevokeEvent = BaseEvent & {
    type: Events.Type.STREAMING;
    subType: Events.SubType.Streaming.STREAMING_KEY_REVOKE;
    metadata: StreamingMetadata;
};
export type StreamingKeyExpiredEvent = BaseEvent & {
    type: Events.Type.STREAMING;
    subType: Events.SubType.Streaming.STREAMING_KEY_EXPIRED;
    metadata: StreamingMetadata;
};
export type StreamingTimeExceededEvent = BaseEvent & {
    type: Events.Type.STREAMING;
    subType: Events.SubType.Streaming.STREAMING_TIME_EXCEEDED;
    metadata: StreamingMetadata;
};
export type StreamingPlaceUpdatedEvent = BaseEvent & {
    type: Events.Type.STREAMING;
    subType: Events.SubType.Streaming.STREAMING_PLACE_UPDATED;
    metadata: StreamingMetadata;
};
export declare namespace StreamingKeyResetEvent {
    const schema: JSONSchema<StreamingKeyResetEvent>;
    const validate: ValidateFunction<StreamingKeyResetEvent>;
}
export declare namespace StreamingKeyRevokeEvent {
    const schema: JSONSchema<StreamingKeyRevokeEvent>;
    const validate: ValidateFunction<StreamingKeyRevokeEvent>;
}
export declare namespace StreamingKeyExpiredEvent {
    const schema: JSONSchema<StreamingKeyExpiredEvent>;
    const validate: ValidateFunction<StreamingKeyExpiredEvent>;
}
export declare namespace StreamingTimeExceededEvent {
    const schema: JSONSchema<StreamingTimeExceededEvent>;
    const validate: ValidateFunction<StreamingTimeExceededEvent>;
}
export declare namespace StreamingPlaceUpdatedEvent {
    const schema: JSONSchema<StreamingPlaceUpdatedEvent>;
    const validate: ValidateFunction<StreamingPlaceUpdatedEvent>;
}
export {};
//# sourceMappingURL=streaming.d.ts.map