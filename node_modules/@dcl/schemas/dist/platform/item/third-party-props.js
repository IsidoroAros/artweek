"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isThirdParty = exports.schema = void 0;
const validation_1 = require("../../validation");
const merkle_tree_1 = require("../merkle-tree");
const linked_wearable_mappings_1 = require("./linked-wearable-mappings");
exports.schema = {
    type: 'object',
    properties: {
        merkleProof: merkle_tree_1.MerkleProof.schema,
        content: {
            type: 'object',
            nullable: false,
            additionalProperties: { type: 'string' },
            required: []
        },
        mappings: Object.assign({ nullable: true }, linked_wearable_mappings_1.Mappings.schema)
    },
    required: ['merkleProof', 'content'],
    _containsHashingKeys: true
};
const _containsHashingKeys = {
    keyword: '_containsHashingKeys',
    validate: function (schema, data) {
        var _a;
        const itemAsThirdParty = data;
        if ((_a = itemAsThirdParty === null || itemAsThirdParty === void 0 ? void 0 : itemAsThirdParty.merkleProof) === null || _a === void 0 ? void 0 : _a.hashingKeys) {
            return itemAsThirdParty.merkleProof.hashingKeys.every((key) => itemAsThirdParty.hasOwnProperty(key));
        }
        return false;
    },
    errors: false
};
const validate = (0, validation_1.generateLazyValidator)(exports.schema, [
    _containsHashingKeys,
    linked_wearable_mappings_1.RangeMapping._fromLessThanOrEqualTo,
    linked_wearable_mappings_1.Mappings._isMappingsValid
]);
function isThirdParty(item) {
    return validate(item);
}
exports.isThirdParty = isThirdParty;
//# sourceMappingURL=third-party-props.js.map