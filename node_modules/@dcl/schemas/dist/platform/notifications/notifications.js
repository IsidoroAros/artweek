"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.NotificationType = void 0;
/**
 * Notification Types (the keys as stored in the notifications DB)
 * @alpha
 */
var NotificationType;
(function (NotificationType) {
    NotificationType["BADGE_GRANTED"] = "badge_granted";
    NotificationType["BID_ACCEPTED"] = "bid_accepted";
    NotificationType["BID_RECEIVED"] = "bid_received";
    NotificationType["EVENTS_STARTED"] = "events_started";
    NotificationType["EVENTS_STARTS_SOON"] = "events_starts_soon";
    NotificationType["GOVERNANCE_ANNOUNCEMENT"] = "governance_announcement";
    NotificationType["GOVERNANCE_AUTHORED_PROPOSAL_FINISHED"] = "governance_authored_proposal_finished";
    NotificationType["GOVERNANCE_COAUTHOR_REQUESTED"] = "governance_coauthor_requested";
    NotificationType["GOVERNANCE_CLIFF_ENDED"] = "governance_cliff_ended";
    NotificationType["GOVERNANCE_NEW_COMMENT_ON_PROJECT_UPDATE"] = "governance_new_comment_on_project_update";
    NotificationType["GOVERNANCE_NEW_COMMENT_ON_PROPOSAL"] = "governance_new_comment_on_proposal";
    NotificationType["GOVERNANCE_PROPOSAL_ENACTED"] = "governance_proposal_enacted";
    NotificationType["GOVERNANCE_VOTING_ENDED_VOTER"] = "governance_voting_ended_voter";
    NotificationType["GOVERNANCE_PITCH_PASSED"] = "governance_pitch_passed";
    NotificationType["GOVERNANCE_TENDER_PASSED"] = "governance_tender_passed";
    NotificationType["GOVERNANCE_WHALE_VOTE"] = "governance_whale_vote";
    NotificationType["GOVERNANCE_VOTED_ON_BEHALF"] = "governance_voted_on_behalf";
    NotificationType["ITEM_SOLD"] = "item_sold";
    NotificationType["ITEM_PUBLISHED"] = "item_published";
    NotificationType["LAND_RENTAL_ENDED"] = "rental_ended";
    NotificationType["LAND_RENTED"] = "rental_started";
    NotificationType["REWARD_ASSIGNED"] = "reward_assignment";
    NotificationType["REWARD_CAMPAIGN_OUT_OF_FUNDS"] = "reward_campaign_out_of_funds";
    NotificationType["REWARD_CAMPAIGN_GAS_PRICE_HIGHER_THAN_EXPECTED"] = "reward_campaign_gas_price_higher_than_expected";
    NotificationType["REWARD_CAMPAIGN_OUT_OF_STOCK"] = "reward_campaign_out_of_stock";
    NotificationType["REWARD_DELAYED"] = "reward_delayed";
    NotificationType["REWARD_IN_PROGRESS"] = "reward_in_progress";
    NotificationType["ROYALTIES_EARNED"] = "royalties_earned";
    NotificationType["SOCIAL_SERVICE_FRIENDSHIP_REQUEST"] = "social_service_friendship_request";
    NotificationType["SOCIAL_SERVICE_FRIENDSHIP_ACCEPTED"] = "social_service_friendship_accepted";
    NotificationType["WORLDS_ACCESS_RESTORED"] = "worlds_access_restored";
    NotificationType["WORLDS_ACCESS_RESTRICTED"] = "worlds_access_restricted";
    NotificationType["WORLDS_MISSING_RESOURCES"] = "worlds_missing_resources";
    NotificationType["WORLDS_PERMISSION_GRANTED"] = "worlds_permission_granted";
    NotificationType["WORLDS_PERMISSION_REVOKED"] = "worlds_permission_revoked";
    NotificationType["CREDITS_GOAL_COMPLETED"] = "credits_goal_completed";
    NotificationType["STREAMING_KEY_RESET"] = "streaming_key_reset";
    NotificationType["STREAMING_KEY_REVOKE"] = "streaming_key_revoke";
    NotificationType["STREAMING_KEY_EXPIRED"] = "streaming_key_expired";
    NotificationType["STREAMING_TIME_EXCEEDED"] = "streaming_time_exceeded";
    NotificationType["STREAMING_PLACE_UPDATED"] = "streaming_place_updated";
    NotificationType["CREDITS_REMINDER_COMPLETE_GOALS"] = "credits_reminder_complete_goals";
    NotificationType["CREDITS_REMINDER_CLAIM_CREDITS"] = "credits_reminder_claim_credits";
    NotificationType["CREDITS_REMINDER_USAGE"] = "credits_reminder_usage";
    NotificationType["CREDITS_REMINDER_USAGE_24_HOURS"] = "credits_reminder_usage_24_hours";
    NotificationType["CREDITS_REMINDER_DO_NOT_MISS_OUT"] = "credits_reminder_do_not_miss_out";
    NotificationType["REFERRAL_INVITED_USERS_ACCEPTED"] = "referral_invited_users_accepted";
    NotificationType["REFERRAL_NEW_TIER_REACHED"] = "referral_new_tier_reached";
})(NotificationType = exports.NotificationType || (exports.NotificationType = {}));
//# sourceMappingURL=notifications.js.map